version: "3.3"
services:
  traefik:
    image: "traefik:v2.2.1"
    container_name: traefik
    hostname: traefik
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api
      - --certificatesresolvers.le.acme.email=${TRAEFIK_SSLEMAIL?Variable not set}
      - --certificatesresolvers.le.acme.storage=./acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`dashboard.${PRIMARY_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=authtraefik"
      # user:devAdmin, password:devto
      - "traefik.http.middlewares.authtraefik.basicauth.users=devAdmin:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq" 
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
    networks:
      - traefik
  api-gateway:
    image: nuvolar/api-gateway
    hostname: api-gateway
    container_name: api-gateway
    environment:
            - ORDER_SERVICE_URL=http://order-api:8080
    ports:
     - "8080:8080"
    #comand:
      #- docker run -p 8080:8080 -t nuvolar/api-gateway -e ORDER_SERVICE_URL=XXXX
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.api-gateway.rule=Host(`api-gateway.${PRIMARY_DOMAIN}`)"
      - "traefik.http.routers.api-gateway.tls=true"
      - "traefik.http.routers.api-gateway.tls.certresolver=le"
      - "traefik.http.services.api-gateway.loadbalancer.server.port=8080"
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
    networks:
      - traefik
    depends_on:
      - order-api

  order-api:
    image: nuvolar/order-service
    hostname: order-service
    container_name: order-service
    ports:
      - "8081:8080"
    environment:
      - CUSTOMER_SERVICE_URL=http://customer-service:8080
    #command:
      #- docker run -p 8081:8080 --name order-service -e CUSTOMER_SERVICE_URL=XXXXX -t nuvolar/order-service
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
    depends_on:
      - customer-service

  customer-service:
    image: nuvolar/customer-service
    hostname: customer-service
    container_name: customer-service
    ports:
      - "8082:8080"
    #command:
      #- docker run -p 8082:8080 --name customer-service -t nuvolar/customer-service
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
    networks:
      - traefik

networks:
  traefik:
    external: true